// By Prim
#include <stdio.h>
#include <queue>
#include <vector>

using namespace std;

vector<pair<int,int> > network[1001];
bool c[1001];
int main(int argc, char **argv)
{
    priority_queue<pair<int,int> > q;
    int N,M;
    scanf("%d %d",&N,&M);
    for(int i=0;i<M;i++)
    {
        int t1,t2,t3;
        scanf("%d %d %d",&t1,&t2,&t3);
        network[t1].push_back(make_pair(t2,t3));
        network[t2].push_back(make_pair(t1,t3));
    }
    c[1]=true;
    for(int i=0;i<network[1].size();i++)
    {
        q.push(make_pair(-network[1][i].second,network[1][i].first));
    }
    int ans=0;
    while(!q.empty())
    {
        int topfirst=-q.top().first;
        int topsecond=q.top().second;
        q.pop();
        if(c[topsecond])
            continue;
        ans+=topfirst;
        c[topsecond]=true;
        for(int i=0;i<network[topsecond].size();i++)
        {
            q.push(make_pair(-network[topsecond][i].second,network[topsecond][i].first));
        }
    }
    printf("%d ",ans);
	return 0;
}
