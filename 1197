// By Prim
#include <stdio.h>
#include <vector>
#include <algorithm>
#include <queue>

using namespace std;

bool c[10001];
int main()
{
    int N,M;
    scanf("%d %d",&N,&M);
    vector<pair<int,int> >MST[100001];
    priority_queue<pair<int,int> >q;
    for(int i=0;i<M;i++)
    {
        int start,end,cost;
        scanf("%d %d %d",&start,&end,&cost);
        MST[start].push_back(make_pair(end,cost));
        MST[end].push_back(make_pair(start,cost));
    }
    c[1]=true;
    for(auto &p : MST[1])
    {
        q.push(make_pair(-p.second,p.first));
    }
    int ans=0;
    while(!q.empty())
    {
        auto p = q.top();
        q.pop();
        if (c[p.second]==true)
            continue;
        ans+=-p.first;
        c[p.second]=true;
        for(auto &t : MST[p.second])
        {
            q.push(make_pair(-t.second,t.first));
        }
    }
    printf("%d",ans);
    return 0;
}
